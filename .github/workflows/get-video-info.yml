name: get-video-info

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: "URL de la vidéo YouTube"
        required: true
        type: string

jobs:
  get-video-info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt || pip install yt-dlp
        

      - name: Run script
        run: python main.py "${{ github.event.inputs.video_url }}"

      # Étape 1 : Recréer le fichier .base64 à partir des secrets
      - name: Recreate base64 file from secrets
        run: |
          mkdir -p .private
          echo "${{ secrets.COOKIES_PART_01 }}" > .private/cookie.txt.base64
          echo "${{ secrets.COOKIES_PART_02 }}" >> .private/cookie.txt.base64
          echo "${{ secrets.COOKIES_PART_03 }}" >> .private/cookie.txt.base64
          echo "${{ secrets.COOKIES_PART_04 }}" >> .private/cookie.txt.base64
          echo "${{ secrets.COOKIES_PART_05 }}" >> .private/cookie.txt.base64
          echo "${{ secrets.COOKIES_PART_06 }}" >> .private/cookie.txt.base64
          echo "${{ secrets.COOKIES_PART_07 }}" >> .private/cookie.txt.base64
          echo "${{ secrets.COOKIES_PART_08 }}" >> .private/cookie.txt.base64
          echo "${{ secrets.COOKIES_PART_09 }}" >> .private/cookie.txt.base64
          echo "${{ secrets.COOKIES_PART_10 }}" >> .private/cookie.txt.base64

      # Étape 2 : Décoder en cookies.txt
      - name: Decode base64 into cookies.txt
        run: |
          base64 -d .private/cookie.txt.base64 > cookies.txt

      # Étape 3 : Générer un nom de fichier structuré
      - name: Prepare output filename
        id: prep
        run: |
          url="${{ github.event.inputs.video_url }}"
          slug=$(echo "$url" | sed 's/[^a-zA-Z0-9]/_/g')
          timestamp=$(date +"%Y%m%d_%H%M%S")
          mkdir -p outputs
          filename="outputs/video_info_${timestamp}_${slug}.json"
          echo "filename=$filename" >> $GITHUB_ENV
          echo "filename=$filename" >> "$GITHUB_OUTPUT"

      # Étape 4 : Exécuter yt-dlp avec le fichier cookies.txt
      - name: Run yt-dlp with cookies
        run: |
          url="${{ github.event.inputs.video_url }}"
          yt-dlp --no-playlist --cookies cookies.txt --dump-single-json "$url" > "${{ env.filename }}"

      # Étape 5 : Commit du fichier JSON de sortie
      - name: Commit result JSON
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add "${{ env.filename }}"
          git commit -m "Add video info: ${{ env.filename }}" || echo "Nothing to commit"
          # pousse sur la même branche que le workflow
          git push origin HEAD:${{ github.ref_name }}

