name: Get YouTube Video Info

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: 'YouTube Video URL'
        required: true

jobs:
  get_info:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install yt-dlp

    # Optionnel : cookies (pour vidÃ©os restreintes). Ajoute un secret COOKIES_B64 si tu veux.
    - name: Prepare cookies (optional)
      if: ${{ secrets.COOKIES_B64 != '' }}
      run: echo "COOKIES_B64=${{ secrets.COOKIES_B64 }}" >> $GITHUB_ENV

    - name: Prepare output filename
      id: prep
      run: |
        url="${{ github.event.inputs.video_url }}"
        slug=$(echo "$url" | sed 's/[^a-zA-Z0-9]/_/g')
        ts=$(date +%s)
        mkdir -p outputs
        echo "FILENAME=outputs/output_${slug}_${ts}.json" >> $GITHUB_ENV
        echo "filename=outputs/output_${slug}_${ts}.json" >> $GITHUB_OUTPUT

    - name: Run extractor
      run: |
        python main.py "${{ github.event.inputs.video_url }}" "${{ env.FILENAME }}"

    - name: Commit result JSON
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add "${{ env.FILENAME }}"
        git commit -m "Add video info: ${{ env.FILENAME }}"
        git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git HEAD:main

    - name: Save output
      run: |
        echo "$TRANSCRIPTION" > outputs/{{ inputs.video_url | slugify }}.txt

